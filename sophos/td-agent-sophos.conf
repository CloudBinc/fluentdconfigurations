####################SOPHOS###########################
#
<source>
@type tail
path /var/log/td-agent/samplesophos
tag sophostag
        <parse>
                @type multi_format
                        <pattern>
                                format regexp
                                expression /^(?<time7>(?<SOPHOSSyslogAServerHeaderTimeStamp>\S+ \d+ \d+:\d+:\d+)) (?<SOPHOSSyslogServerHostName>\S+) (?<data7>(?<EventTime>\d+: \d+:\d+-\d+:\d+:\d+) (?<SOPHOSHostname>\S+) (?<SOPHOSLogtype>[a-z]+)\[(?<SOPHOSProcessID>\d+)\]: (?<kvp>.+))$/
                        </pattern>
                        <pattern>
                                format regexp
                                expression /^(?<data7>.+)$/
			</pattern>
        </parse>
time_key time7
time_format "%Y: %m:%d-%H:%M:%S"
</source>
#
#
<filter sophostag>
  @type parser
  key_name kvp
  reserve_data true
  <parse>
    @type kv
    time_key my_time
  </parse>
</filter>

<filter sophostag>
@type record_transformer
  <record>
    host "#{Socket.gethostname}"
    datatype7 "sophosutm"
#    time7 ${Time.at(time).strftime('%s')}
  </record>
</filter>
<filter sophostag>
  type record_transformer
  enable_ruby
  <record>
#    time7 ${Time.at(time).strftime('%Y-%m-%d %H:%M:%S')}
#    #     time7 ${Time.at(time).strftime('%s')}
        time7 ${record["time7"].to_i} #Epoch Time conversion
  </record>
</filter>
###File Output
<match sophostag>
@type file
@id sophos_file
path /var/log/td-agent/parsedsophos
</match>

#### HTTP Output
##<match sophostag>
##@type http
##endpoint_url    http://full-fluent.ipradr.com:31000/mongo.log
##http_method     post
##serializer      json
##</match>
##
###
#
##### Mongo Output
#
##<match sophostag>
##  @type mongo
##  host 10.1.2.53
##  port 27017
##  database Logging
##  collection epoch
##  # for capped collection
##  capped
##  capped_size 1024m
##    <inject>
###    key name of timestamp
##     time_key time
##    </inject>
##    <buffer>
##    # flush
##      flush_interval 10s
##    </buffer>
##</match>

####################################################################################
